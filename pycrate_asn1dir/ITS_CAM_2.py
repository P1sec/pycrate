# -*- coding: UTF-8 -*-
# Code automatically generated by pycrate_asn1c

from pycrate_asn1rt.utils            import *
from pycrate_asn1rt.err              import *
from pycrate_asn1rt.glob             import make_GLOBAL, GLOBAL
from pycrate_asn1rt.dictobj          import ASN1Dict
from pycrate_asn1rt.refobj           import *
from pycrate_asn1rt.setobj           import *
from pycrate_asn1rt.asnobj_basic     import *
from pycrate_asn1rt.asnobj_str       import *
from pycrate_asn1rt.asnobj_construct import *
from pycrate_asn1rt.asnobj_class     import *
from pycrate_asn1rt.asnobj_ext       import *
from pycrate_asn1rt.init             import init_modules

class CAM_PDU_Descriptions:

    _name_  = 'CAM-PDU-Descriptions'
    _oid_   = [0, 4, 0, 5, 1, 302637, 2, 2]
    
    _obj_ = [
        'CAM',
        'CoopAwareness',
        'CamParameters',
        'HighFrequencyContainer',
        'LowFrequencyContainer',
        'SpecialVehicleContainer',
        'BasicContainer',
        'BasicVehicleContainerHighFrequency',
        'BasicVehicleContainerLowFrequency',
        'PublicTransportContainer',
        'SpecialTransportContainer',
        'DangerousGoodsContainer',
        'RoadWorksContainerBasic',
        'RescueContainer',
        'EmergencyContainer',
        'SafetyCarContainer',
        'RSUContainerHighFrequency',
        'GenerationDeltaTime',
        ]
    _type_ = [
        'CAM',
        'CoopAwareness',
        'CamParameters',
        'HighFrequencyContainer',
        'LowFrequencyContainer',
        'SpecialVehicleContainer',
        'BasicContainer',
        'BasicVehicleContainerHighFrequency',
        'BasicVehicleContainerLowFrequency',
        'PublicTransportContainer',
        'SpecialTransportContainer',
        'DangerousGoodsContainer',
        'RoadWorksContainerBasic',
        'RescueContainer',
        'EmergencyContainer',
        'SafetyCarContainer',
        'RSUContainerHighFrequency',
        'GenerationDeltaTime',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< CAM >-----#
    CAM = SEQ(name='CAM', mode=MODE_TYPE)
    _CAM_header = SEQ(name='header', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ItsPduHeader')))
    _CAM_cam = SEQ(name='cam', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'CoopAwareness')))
    CAM._cont = ASN1Dict([
        ('header', _CAM_header),
        ('cam', _CAM_cam),
        ])
    CAM._ext = None
    
    #-----< CoopAwareness >-----#
    CoopAwareness = SEQ(name='CoopAwareness', mode=MODE_TYPE)
    _CoopAwareness_generationDeltaTime = INT(name='generationDeltaTime', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'GenerationDeltaTime')))
    _CoopAwareness_camParameters = SEQ(name='camParameters', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'CamParameters')))
    CoopAwareness._cont = ASN1Dict([
        ('generationDeltaTime', _CoopAwareness_generationDeltaTime),
        ('camParameters', _CoopAwareness_camParameters),
        ])
    CoopAwareness._ext = None
    
    #-----< CamParameters >-----#
    CamParameters = SEQ(name='CamParameters', mode=MODE_TYPE)
    _CamParameters_basicContainer = SEQ(name='basicContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'BasicContainer')))
    _CamParameters_highFrequencyContainer = CHOICE(name='highFrequencyContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'HighFrequencyContainer')))
    _CamParameters_lowFrequencyContainer = CHOICE(name='lowFrequencyContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'LowFrequencyContainer')), opt=True)
    _CamParameters_specialVehicleContainer = CHOICE(name='specialVehicleContainer', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_EXPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'SpecialVehicleContainer')), opt=True)
    CamParameters._cont = ASN1Dict([
        ('basicContainer', _CamParameters_basicContainer),
        ('highFrequencyContainer', _CamParameters_highFrequencyContainer),
        ('lowFrequencyContainer', _CamParameters_lowFrequencyContainer),
        ('specialVehicleContainer', _CamParameters_specialVehicleContainer),
        ])
    CamParameters._ext = []
    
    #-----< HighFrequencyContainer >-----#
    HighFrequencyContainer = CHOICE(name='HighFrequencyContainer', mode=MODE_TYPE)
    _HighFrequencyContainer_basicVehicleContainerHighFrequency = SEQ(name='basicVehicleContainerHighFrequency', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'BasicVehicleContainerHighFrequency')))
    _HighFrequencyContainer_rsuContainerHighFrequency = SEQ(name='rsuContainerHighFrequency', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'RSUContainerHighFrequency')))
    HighFrequencyContainer._cont = ASN1Dict([
        ('basicVehicleContainerHighFrequency', _HighFrequencyContainer_basicVehicleContainerHighFrequency),
        ('rsuContainerHighFrequency', _HighFrequencyContainer_rsuContainerHighFrequency),
        ])
    HighFrequencyContainer._ext = []
    
    #-----< LowFrequencyContainer >-----#
    LowFrequencyContainer = CHOICE(name='LowFrequencyContainer', mode=MODE_TYPE)
    _LowFrequencyContainer_basicVehicleContainerLowFrequency = SEQ(name='basicVehicleContainerLowFrequency', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'BasicVehicleContainerLowFrequency')))
    LowFrequencyContainer._cont = ASN1Dict([
        ('basicVehicleContainerLowFrequency', _LowFrequencyContainer_basicVehicleContainerLowFrequency),
        ])
    LowFrequencyContainer._ext = []
    
    #-----< SpecialVehicleContainer >-----#
    SpecialVehicleContainer = CHOICE(name='SpecialVehicleContainer', mode=MODE_TYPE)
    _SpecialVehicleContainer_publicTransportContainer = SEQ(name='publicTransportContainer', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'PublicTransportContainer')))
    _SpecialVehicleContainer_specialTransportContainer = SEQ(name='specialTransportContainer', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'SpecialTransportContainer')))
    _SpecialVehicleContainer_dangerousGoodsContainer = SEQ(name='dangerousGoodsContainer', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'DangerousGoodsContainer')))
    _SpecialVehicleContainer_roadWorksContainerBasic = SEQ(name='roadWorksContainerBasic', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'RoadWorksContainerBasic')))
    _SpecialVehicleContainer_rescueContainer = SEQ(name='rescueContainer', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'RescueContainer')))
    _SpecialVehicleContainer_emergencyContainer = SEQ(name='emergencyContainer', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'EmergencyContainer')))
    _SpecialVehicleContainer_safetyCarContainer = SEQ(name='safetyCarContainer', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('CAM-PDU-Descriptions', 'SafetyCarContainer')))
    SpecialVehicleContainer._cont = ASN1Dict([
        ('publicTransportContainer', _SpecialVehicleContainer_publicTransportContainer),
        ('specialTransportContainer', _SpecialVehicleContainer_specialTransportContainer),
        ('dangerousGoodsContainer', _SpecialVehicleContainer_dangerousGoodsContainer),
        ('roadWorksContainerBasic', _SpecialVehicleContainer_roadWorksContainerBasic),
        ('rescueContainer', _SpecialVehicleContainer_rescueContainer),
        ('emergencyContainer', _SpecialVehicleContainer_emergencyContainer),
        ('safetyCarContainer', _SpecialVehicleContainer_safetyCarContainer),
        ])
    SpecialVehicleContainer._ext = []
    
    #-----< BasicContainer >-----#
    BasicContainer = SEQ(name='BasicContainer', mode=MODE_TYPE)
    _BasicContainer_stationType = INT(name='stationType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'StationType')))
    _BasicContainer_referencePosition = SEQ(name='referencePosition', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ReferencePosition')))
    BasicContainer._cont = ASN1Dict([
        ('stationType', _BasicContainer_stationType),
        ('referencePosition', _BasicContainer_referencePosition),
        ])
    BasicContainer._ext = []
    
    #-----< BasicVehicleContainerHighFrequency >-----#
    BasicVehicleContainerHighFrequency = SEQ(name='BasicVehicleContainerHighFrequency', mode=MODE_TYPE)
    _BasicVehicleContainerHighFrequency_heading = SEQ(name='heading', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Heading')))
    _BasicVehicleContainerHighFrequency_speed = SEQ(name='speed', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Speed')))
    _BasicVehicleContainerHighFrequency_driveDirection = ENUM(name='driveDirection', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DriveDirection')))
    _BasicVehicleContainerHighFrequency_vehicleLength = SEQ(name='vehicleLength', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VehicleLength')))
    _BasicVehicleContainerHighFrequency_vehicleWidth = INT(name='vehicleWidth', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VehicleWidth')))
    _BasicVehicleContainerHighFrequency_longitudinalAcceleration = SEQ(name='longitudinalAcceleration', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LongitudinalAcceleration')))
    _BasicVehicleContainerHighFrequency_curvature = SEQ(name='curvature', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Curvature')))
    _BasicVehicleContainerHighFrequency_curvatureCalculationMode = ENUM(name='curvatureCalculationMode', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CurvatureCalculationMode')))
    _BasicVehicleContainerHighFrequency_yawRate = SEQ(name='yawRate', mode=MODE_TYPE, tag=(8, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'YawRate')))
    _BasicVehicleContainerHighFrequency_accelerationControl = BIT_STR(name='accelerationControl', mode=MODE_TYPE, tag=(9, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AccelerationControl')), opt=True)
    _BasicVehicleContainerHighFrequency_lanePosition = INT(name='lanePosition', mode=MODE_TYPE, tag=(10, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LanePosition')), opt=True)
    _BasicVehicleContainerHighFrequency_steeringWheelAngle = SEQ(name='steeringWheelAngle', mode=MODE_TYPE, tag=(11, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SteeringWheelAngle')), opt=True)
    _BasicVehicleContainerHighFrequency_lateralAcceleration = SEQ(name='lateralAcceleration', mode=MODE_TYPE, tag=(12, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LateralAcceleration')), opt=True)
    _BasicVehicleContainerHighFrequency_verticalAcceleration = SEQ(name='verticalAcceleration', mode=MODE_TYPE, tag=(13, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VerticalAcceleration')), opt=True)
    _BasicVehicleContainerHighFrequency_performanceClass = INT(name='performanceClass', mode=MODE_TYPE, tag=(14, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PerformanceClass')), opt=True)
    _BasicVehicleContainerHighFrequency_cenDsrcTollingZone = SEQ(name='cenDsrcTollingZone', mode=MODE_TYPE, tag=(15, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CenDsrcTollingZone')), opt=True)
    BasicVehicleContainerHighFrequency._cont = ASN1Dict([
        ('heading', _BasicVehicleContainerHighFrequency_heading),
        ('speed', _BasicVehicleContainerHighFrequency_speed),
        ('driveDirection', _BasicVehicleContainerHighFrequency_driveDirection),
        ('vehicleLength', _BasicVehicleContainerHighFrequency_vehicleLength),
        ('vehicleWidth', _BasicVehicleContainerHighFrequency_vehicleWidth),
        ('longitudinalAcceleration', _BasicVehicleContainerHighFrequency_longitudinalAcceleration),
        ('curvature', _BasicVehicleContainerHighFrequency_curvature),
        ('curvatureCalculationMode', _BasicVehicleContainerHighFrequency_curvatureCalculationMode),
        ('yawRate', _BasicVehicleContainerHighFrequency_yawRate),
        ('accelerationControl', _BasicVehicleContainerHighFrequency_accelerationControl),
        ('lanePosition', _BasicVehicleContainerHighFrequency_lanePosition),
        ('steeringWheelAngle', _BasicVehicleContainerHighFrequency_steeringWheelAngle),
        ('lateralAcceleration', _BasicVehicleContainerHighFrequency_lateralAcceleration),
        ('verticalAcceleration', _BasicVehicleContainerHighFrequency_verticalAcceleration),
        ('performanceClass', _BasicVehicleContainerHighFrequency_performanceClass),
        ('cenDsrcTollingZone', _BasicVehicleContainerHighFrequency_cenDsrcTollingZone),
        ])
    BasicVehicleContainerHighFrequency._ext = None
    
    #-----< BasicVehicleContainerLowFrequency >-----#
    BasicVehicleContainerLowFrequency = SEQ(name='BasicVehicleContainerLowFrequency', mode=MODE_TYPE)
    _BasicVehicleContainerLowFrequency_vehicleRole = ENUM(name='vehicleRole', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VehicleRole')))
    _BasicVehicleContainerLowFrequency_exteriorLights = BIT_STR(name='exteriorLights', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ExteriorLights')))
    _BasicVehicleContainerLowFrequency_pathHistory = SEQ_OF(name='pathHistory', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PathHistory')))
    BasicVehicleContainerLowFrequency._cont = ASN1Dict([
        ('vehicleRole', _BasicVehicleContainerLowFrequency_vehicleRole),
        ('exteriorLights', _BasicVehicleContainerLowFrequency_exteriorLights),
        ('pathHistory', _BasicVehicleContainerLowFrequency_pathHistory),
        ])
    BasicVehicleContainerLowFrequency._ext = None
    
    #-----< PublicTransportContainer >-----#
    PublicTransportContainer = SEQ(name='PublicTransportContainer', mode=MODE_TYPE)
    _PublicTransportContainer_embarkationStatus = BOOL(name='embarkationStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'EmbarkationStatus')))
    _PublicTransportContainer_ptActivation = SEQ(name='ptActivation', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PtActivation')), opt=True)
    PublicTransportContainer._cont = ASN1Dict([
        ('embarkationStatus', _PublicTransportContainer_embarkationStatus),
        ('ptActivation', _PublicTransportContainer_ptActivation),
        ])
    PublicTransportContainer._ext = None
    
    #-----< SpecialTransportContainer >-----#
    SpecialTransportContainer = SEQ(name='SpecialTransportContainer', mode=MODE_TYPE)
    _SpecialTransportContainer_specialTransportType = BIT_STR(name='specialTransportType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SpecialTransportType')))
    _SpecialTransportContainer_lightBarSirenInUse = BIT_STR(name='lightBarSirenInUse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LightBarSirenInUse')))
    SpecialTransportContainer._cont = ASN1Dict([
        ('specialTransportType', _SpecialTransportContainer_specialTransportType),
        ('lightBarSirenInUse', _SpecialTransportContainer_lightBarSirenInUse),
        ])
    SpecialTransportContainer._ext = None
    
    #-----< DangerousGoodsContainer >-----#
    DangerousGoodsContainer = SEQ(name='DangerousGoodsContainer', mode=MODE_TYPE)
    _DangerousGoodsContainer_dangerousGoodsBasic = ENUM(name='dangerousGoodsBasic', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DangerousGoodsBasic')))
    DangerousGoodsContainer._cont = ASN1Dict([
        ('dangerousGoodsBasic', _DangerousGoodsContainer_dangerousGoodsBasic),
        ])
    DangerousGoodsContainer._ext = None
    
    #-----< RoadWorksContainerBasic >-----#
    RoadWorksContainerBasic = SEQ(name='RoadWorksContainerBasic', mode=MODE_TYPE)
    _RoadWorksContainerBasic_roadworksSubCauseCode = INT(name='roadworksSubCauseCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'RoadworksSubCauseCode')), opt=True)
    _RoadWorksContainerBasic_lightBarSirenInUse = BIT_STR(name='lightBarSirenInUse', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LightBarSirenInUse')))
    _RoadWorksContainerBasic_closedLanes = SEQ(name='closedLanes', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ClosedLanes')), opt=True)
    RoadWorksContainerBasic._cont = ASN1Dict([
        ('roadworksSubCauseCode', _RoadWorksContainerBasic_roadworksSubCauseCode),
        ('lightBarSirenInUse', _RoadWorksContainerBasic_lightBarSirenInUse),
        ('closedLanes', _RoadWorksContainerBasic_closedLanes),
        ])
    RoadWorksContainerBasic._ext = None
    
    #-----< RescueContainer >-----#
    RescueContainer = SEQ(name='RescueContainer', mode=MODE_TYPE)
    _RescueContainer_lightBarSirenInUse = BIT_STR(name='lightBarSirenInUse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LightBarSirenInUse')))
    RescueContainer._cont = ASN1Dict([
        ('lightBarSirenInUse', _RescueContainer_lightBarSirenInUse),
        ])
    RescueContainer._ext = None
    
    #-----< EmergencyContainer >-----#
    EmergencyContainer = SEQ(name='EmergencyContainer', mode=MODE_TYPE)
    _EmergencyContainer_lightBarSirenInUse = BIT_STR(name='lightBarSirenInUse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LightBarSirenInUse')))
    _EmergencyContainer_incidentIndication = SEQ(name='incidentIndication', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CauseCode')), opt=True)
    _EmergencyContainer_emergencyPriority = BIT_STR(name='emergencyPriority', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'EmergencyPriority')), opt=True)
    EmergencyContainer._cont = ASN1Dict([
        ('lightBarSirenInUse', _EmergencyContainer_lightBarSirenInUse),
        ('incidentIndication', _EmergencyContainer_incidentIndication),
        ('emergencyPriority', _EmergencyContainer_emergencyPriority),
        ])
    EmergencyContainer._ext = None
    
    #-----< SafetyCarContainer >-----#
    SafetyCarContainer = SEQ(name='SafetyCarContainer', mode=MODE_TYPE)
    _SafetyCarContainer_lightBarSirenInUse = BIT_STR(name='lightBarSirenInUse', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LightBarSirenInUse')))
    _SafetyCarContainer_incidentIndication = SEQ(name='incidentIndication', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CauseCode')), opt=True)
    _SafetyCarContainer_trafficRule = ENUM(name='trafficRule', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'TrafficRule')), opt=True)
    _SafetyCarContainer_speedLimit = INT(name='speedLimit', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SpeedLimit')), opt=True)
    SafetyCarContainer._cont = ASN1Dict([
        ('lightBarSirenInUse', _SafetyCarContainer_lightBarSirenInUse),
        ('incidentIndication', _SafetyCarContainer_incidentIndication),
        ('trafficRule', _SafetyCarContainer_trafficRule),
        ('speedLimit', _SafetyCarContainer_speedLimit),
        ])
    SafetyCarContainer._ext = None
    
    #-----< RSUContainerHighFrequency >-----#
    RSUContainerHighFrequency = SEQ(name='RSUContainerHighFrequency', mode=MODE_TYPE)
    _RSUContainerHighFrequency_protectedCommunicationZonesRSU = SEQ_OF(name='protectedCommunicationZonesRSU', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ProtectedCommunicationZonesRSU')), opt=True)
    RSUContainerHighFrequency._cont = ASN1Dict([
        ('protectedCommunicationZonesRSU', _RSUContainerHighFrequency_protectedCommunicationZonesRSU),
        ])
    RSUContainerHighFrequency._ext = []
    
    #-----< GenerationDeltaTime >-----#
    GenerationDeltaTime = INT(name='GenerationDeltaTime', mode=MODE_TYPE)
    GenerationDeltaTime._cont = ASN1Dict([('oneMilliSec', 1)])
    GenerationDeltaTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    _all_ = [
        _CAM_header,
        _CAM_cam,
        CAM,
        _CoopAwareness_generationDeltaTime,
        _CoopAwareness_camParameters,
        CoopAwareness,
        _CamParameters_basicContainer,
        _CamParameters_highFrequencyContainer,
        _CamParameters_lowFrequencyContainer,
        _CamParameters_specialVehicleContainer,
        CamParameters,
        _HighFrequencyContainer_basicVehicleContainerHighFrequency,
        _HighFrequencyContainer_rsuContainerHighFrequency,
        HighFrequencyContainer,
        _LowFrequencyContainer_basicVehicleContainerLowFrequency,
        LowFrequencyContainer,
        _SpecialVehicleContainer_publicTransportContainer,
        _SpecialVehicleContainer_specialTransportContainer,
        _SpecialVehicleContainer_dangerousGoodsContainer,
        _SpecialVehicleContainer_roadWorksContainerBasic,
        _SpecialVehicleContainer_rescueContainer,
        _SpecialVehicleContainer_emergencyContainer,
        _SpecialVehicleContainer_safetyCarContainer,
        SpecialVehicleContainer,
        _BasicContainer_stationType,
        _BasicContainer_referencePosition,
        BasicContainer,
        _BasicVehicleContainerHighFrequency_heading,
        _BasicVehicleContainerHighFrequency_speed,
        _BasicVehicleContainerHighFrequency_driveDirection,
        _BasicVehicleContainerHighFrequency_vehicleLength,
        _BasicVehicleContainerHighFrequency_vehicleWidth,
        _BasicVehicleContainerHighFrequency_longitudinalAcceleration,
        _BasicVehicleContainerHighFrequency_curvature,
        _BasicVehicleContainerHighFrequency_curvatureCalculationMode,
        _BasicVehicleContainerHighFrequency_yawRate,
        _BasicVehicleContainerHighFrequency_accelerationControl,
        _BasicVehicleContainerHighFrequency_lanePosition,
        _BasicVehicleContainerHighFrequency_steeringWheelAngle,
        _BasicVehicleContainerHighFrequency_lateralAcceleration,
        _BasicVehicleContainerHighFrequency_verticalAcceleration,
        _BasicVehicleContainerHighFrequency_performanceClass,
        _BasicVehicleContainerHighFrequency_cenDsrcTollingZone,
        BasicVehicleContainerHighFrequency,
        _BasicVehicleContainerLowFrequency_vehicleRole,
        _BasicVehicleContainerLowFrequency_exteriorLights,
        _BasicVehicleContainerLowFrequency_pathHistory,
        BasicVehicleContainerLowFrequency,
        _PublicTransportContainer_embarkationStatus,
        _PublicTransportContainer_ptActivation,
        PublicTransportContainer,
        _SpecialTransportContainer_specialTransportType,
        _SpecialTransportContainer_lightBarSirenInUse,
        SpecialTransportContainer,
        _DangerousGoodsContainer_dangerousGoodsBasic,
        DangerousGoodsContainer,
        _RoadWorksContainerBasic_roadworksSubCauseCode,
        _RoadWorksContainerBasic_lightBarSirenInUse,
        _RoadWorksContainerBasic_closedLanes,
        RoadWorksContainerBasic,
        _RescueContainer_lightBarSirenInUse,
        RescueContainer,
        _EmergencyContainer_lightBarSirenInUse,
        _EmergencyContainer_incidentIndication,
        _EmergencyContainer_emergencyPriority,
        EmergencyContainer,
        _SafetyCarContainer_lightBarSirenInUse,
        _SafetyCarContainer_incidentIndication,
        _SafetyCarContainer_trafficRule,
        _SafetyCarContainer_speedLimit,
        SafetyCarContainer,
        _RSUContainerHighFrequency_protectedCommunicationZonesRSU,
        RSUContainerHighFrequency,
        GenerationDeltaTime,
    ]

class ITS_Container:

    _name_  = 'ITS-Container'
    _oid_   = [0, 4, 0, 5, 1, 102894, 2, 2]
    
    _obj_ = [
        'ItsPduHeader',
        'StationID',
        'ReferencePosition',
        'DeltaReferencePosition',
        'Longitude',
        'Latitude',
        'Altitude',
        'AltitudeValue',
        'AltitudeConfidence',
        'DeltaLongitude',
        'DeltaLatitude',
        'DeltaAltitude',
        'PosConfidenceEllipse',
        'PathPoint',
        'PathDeltaTime',
        'PtActivation',
        'PtActivationType',
        'PtActivationData',
        'AccelerationControl',
        'SemiAxisLength',
        'CauseCode',
        'CauseCodeType',
        'SubCauseCodeType',
        'TrafficConditionSubCauseCode',
        'AccidentSubCauseCode',
        'RoadworksSubCauseCode',
        'HumanPresenceOnTheRoadSubCauseCode',
        'WrongWayDrivingSubCauseCode',
        'AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode',
        'AdverseWeatherCondition-AdhesionSubCauseCode',
        'AdverseWeatherCondition-VisibilitySubCauseCode',
        'AdverseWeatherCondition-PrecipitationSubCauseCode',
        'SlowVehicleSubCauseCode',
        'StationaryVehicleSubCauseCode',
        'HumanProblemSubCauseCode',
        'EmergencyVehicleApproachingSubCauseCode',
        'HazardousLocation-DangerousCurveSubCauseCode',
        'HazardousLocation-SurfaceConditionSubCauseCode',
        'HazardousLocation-ObstacleOnTheRoadSubCauseCode',
        'HazardousLocation-AnimalOnTheRoadSubCauseCode',
        'CollisionRiskSubCauseCode',
        'SignalViolationSubCauseCode',
        'RescueAndRecoveryWorkInProgressSubCauseCode',
        'DangerousEndOfQueueSubCauseCode',
        'DangerousSituationSubCauseCode',
        'VehicleBreakdownSubCauseCode',
        'PostCrashSubCauseCode',
        'Curvature',
        'CurvatureValue',
        'CurvatureConfidence',
        'CurvatureCalculationMode',
        'Heading',
        'HeadingValue',
        'HeadingConfidence',
        'LanePosition',
        'ClosedLanes',
        'HardShoulderStatus',
        'DrivingLaneStatus',
        'PerformanceClass',
        'SpeedValue',
        'SpeedConfidence',
        'VehicleMass',
        'Speed',
        'DriveDirection',
        'EmbarkationStatus',
        'LongitudinalAcceleration',
        'LongitudinalAccelerationValue',
        'AccelerationConfidence',
        'LateralAcceleration',
        'LateralAccelerationValue',
        'VerticalAcceleration',
        'VerticalAccelerationValue',
        'StationType',
        'ExteriorLights',
        'DangerousGoodsBasic',
        'DangerousGoodsExtended',
        'SpecialTransportType',
        'LightBarSirenInUse',
        'HeightLonCarr',
        'PosLonCarr',
        'PosPillar',
        'PosCentMass',
        'RequestResponseIndication',
        'SpeedLimit',
        'StationarySince',
        'Temperature',
        'TrafficRule',
        'WheelBaseVehicle',
        'TurningRadius',
        'PosFrontAx',
        'PositionOfOccupants',
        'PositioningSolutionType',
        'VehicleIdentification',
        'WMInumber',
        'VDS',
        'EnergyStorageType',
        'VehicleLength',
        'VehicleLengthValue',
        'VehicleLengthConfidenceIndication',
        'VehicleWidth',
        'PathHistory',
        'EmergencyPriority',
        'InformationQuality',
        'RoadType',
        'SteeringWheelAngle',
        'SteeringWheelAngleValue',
        'SteeringWheelAngleConfidence',
        'TimestampIts',
        'VehicleRole',
        'YawRate',
        'YawRateValue',
        'YawRateConfidence',
        'ProtectedZoneType',
        'RelevanceDistance',
        'RelevanceTrafficDirection',
        'TransmissionInterval',
        'ValidityDuration',
        'ActionID',
        'ItineraryPath',
        'ProtectedCommunicationZone',
        'Traces',
        'NumberOfOccupants',
        'SequenceNumber',
        'PositionOfPillars',
        'RestrictedTypes',
        'EventHistory',
        'EventPoint',
        'ProtectedCommunicationZonesRSU',
        'CenDsrcTollingZone',
        'ProtectedZoneRadius',
        'ProtectedZoneID',
        'CenDsrcTollingZoneID',
        'DigitalMap',
        'OpeningDaysHours',
        'PhoneNumber',
        ]
    _type_ = [
        'ItsPduHeader',
        'StationID',
        'ReferencePosition',
        'DeltaReferencePosition',
        'Longitude',
        'Latitude',
        'Altitude',
        'AltitudeValue',
        'AltitudeConfidence',
        'DeltaLongitude',
        'DeltaLatitude',
        'DeltaAltitude',
        'PosConfidenceEllipse',
        'PathPoint',
        'PathDeltaTime',
        'PtActivation',
        'PtActivationType',
        'PtActivationData',
        'AccelerationControl',
        'SemiAxisLength',
        'CauseCode',
        'CauseCodeType',
        'SubCauseCodeType',
        'TrafficConditionSubCauseCode',
        'AccidentSubCauseCode',
        'RoadworksSubCauseCode',
        'HumanPresenceOnTheRoadSubCauseCode',
        'WrongWayDrivingSubCauseCode',
        'AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode',
        'AdverseWeatherCondition-AdhesionSubCauseCode',
        'AdverseWeatherCondition-VisibilitySubCauseCode',
        'AdverseWeatherCondition-PrecipitationSubCauseCode',
        'SlowVehicleSubCauseCode',
        'StationaryVehicleSubCauseCode',
        'HumanProblemSubCauseCode',
        'EmergencyVehicleApproachingSubCauseCode',
        'HazardousLocation-DangerousCurveSubCauseCode',
        'HazardousLocation-SurfaceConditionSubCauseCode',
        'HazardousLocation-ObstacleOnTheRoadSubCauseCode',
        'HazardousLocation-AnimalOnTheRoadSubCauseCode',
        'CollisionRiskSubCauseCode',
        'SignalViolationSubCauseCode',
        'RescueAndRecoveryWorkInProgressSubCauseCode',
        'DangerousEndOfQueueSubCauseCode',
        'DangerousSituationSubCauseCode',
        'VehicleBreakdownSubCauseCode',
        'PostCrashSubCauseCode',
        'Curvature',
        'CurvatureValue',
        'CurvatureConfidence',
        'CurvatureCalculationMode',
        'Heading',
        'HeadingValue',
        'HeadingConfidence',
        'LanePosition',
        'ClosedLanes',
        'HardShoulderStatus',
        'DrivingLaneStatus',
        'PerformanceClass',
        'SpeedValue',
        'SpeedConfidence',
        'VehicleMass',
        'Speed',
        'DriveDirection',
        'EmbarkationStatus',
        'LongitudinalAcceleration',
        'LongitudinalAccelerationValue',
        'AccelerationConfidence',
        'LateralAcceleration',
        'LateralAccelerationValue',
        'VerticalAcceleration',
        'VerticalAccelerationValue',
        'StationType',
        'ExteriorLights',
        'DangerousGoodsBasic',
        'DangerousGoodsExtended',
        'SpecialTransportType',
        'LightBarSirenInUse',
        'HeightLonCarr',
        'PosLonCarr',
        'PosPillar',
        'PosCentMass',
        'RequestResponseIndication',
        'SpeedLimit',
        'StationarySince',
        'Temperature',
        'TrafficRule',
        'WheelBaseVehicle',
        'TurningRadius',
        'PosFrontAx',
        'PositionOfOccupants',
        'PositioningSolutionType',
        'VehicleIdentification',
        'WMInumber',
        'VDS',
        'EnergyStorageType',
        'VehicleLength',
        'VehicleLengthValue',
        'VehicleLengthConfidenceIndication',
        'VehicleWidth',
        'PathHistory',
        'EmergencyPriority',
        'InformationQuality',
        'RoadType',
        'SteeringWheelAngle',
        'SteeringWheelAngleValue',
        'SteeringWheelAngleConfidence',
        'TimestampIts',
        'VehicleRole',
        'YawRate',
        'YawRateValue',
        'YawRateConfidence',
        'ProtectedZoneType',
        'RelevanceDistance',
        'RelevanceTrafficDirection',
        'TransmissionInterval',
        'ValidityDuration',
        'ActionID',
        'ItineraryPath',
        'ProtectedCommunicationZone',
        'Traces',
        'NumberOfOccupants',
        'SequenceNumber',
        'PositionOfPillars',
        'RestrictedTypes',
        'EventHistory',
        'EventPoint',
        'ProtectedCommunicationZonesRSU',
        'CenDsrcTollingZone',
        'ProtectedZoneRadius',
        'ProtectedZoneID',
        'CenDsrcTollingZoneID',
        'DigitalMap',
        'OpeningDaysHours',
        'PhoneNumber',
        ]
    _set_ = [
        ]
    _val_ = [
        ]
    _class_ = [
        ]
    _param_ = [
        ]
    
    #-----< ItsPduHeader >-----#
    ItsPduHeader = SEQ(name='ItsPduHeader', mode=MODE_TYPE)
    _ItsPduHeader_protocolVersion = INT(name='protocolVersion', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ItsPduHeader_protocolVersion._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _ItsPduHeader_messageID = INT(name='messageID', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _ItsPduHeader_messageID._cont = ASN1Dict([('denm', 1), ('cam', 2), ('poi', 3), ('spatem', 4), ('mapem', 5), ('ivim', 6), ('ev-rsr', 7), ('tistpgtransaction', 8), ('srem', 9), ('ssem', 10), ('evcsn', 11), ('saem', 12), ('rtcmem', 13)])
    _ItsPduHeader_messageID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    _ItsPduHeader_stationID = INT(name='stationID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'StationID')))
    ItsPduHeader._cont = ASN1Dict([
        ('protocolVersion', _ItsPduHeader_protocolVersion),
        ('messageID', _ItsPduHeader_messageID),
        ('stationID', _ItsPduHeader_stationID),
        ])
    ItsPduHeader._ext = None
    
    #-----< StationID >-----#
    StationID = INT(name='StationID', mode=MODE_TYPE)
    StationID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4294967295)], ev=None, er=[])
    
    #-----< ReferencePosition >-----#
    ReferencePosition = SEQ(name='ReferencePosition', mode=MODE_TYPE)
    _ReferencePosition_latitude = INT(name='latitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Latitude')))
    _ReferencePosition_longitude = INT(name='longitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Longitude')))
    _ReferencePosition_positionConfidenceEllipse = SEQ(name='positionConfidenceEllipse', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PosConfidenceEllipse')))
    _ReferencePosition_altitude = SEQ(name='altitude', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Altitude')))
    ReferencePosition._cont = ASN1Dict([
        ('latitude', _ReferencePosition_latitude),
        ('longitude', _ReferencePosition_longitude),
        ('positionConfidenceEllipse', _ReferencePosition_positionConfidenceEllipse),
        ('altitude', _ReferencePosition_altitude),
        ])
    ReferencePosition._ext = None
    
    #-----< DeltaReferencePosition >-----#
    DeltaReferencePosition = SEQ(name='DeltaReferencePosition', mode=MODE_TYPE)
    _DeltaReferencePosition_deltaLatitude = INT(name='deltaLatitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaLatitude')))
    _DeltaReferencePosition_deltaLongitude = INT(name='deltaLongitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaLongitude')))
    _DeltaReferencePosition_deltaAltitude = INT(name='deltaAltitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaAltitude')))
    DeltaReferencePosition._cont = ASN1Dict([
        ('deltaLatitude', _DeltaReferencePosition_deltaLatitude),
        ('deltaLongitude', _DeltaReferencePosition_deltaLongitude),
        ('deltaAltitude', _DeltaReferencePosition_deltaAltitude),
        ])
    DeltaReferencePosition._ext = None
    
    #-----< Longitude >-----#
    Longitude = INT(name='Longitude', mode=MODE_TYPE)
    Longitude._cont = ASN1Dict([('oneMicrodegreeEast', 10), ('oneMicrodegreeWest', -10), ('unavailable', 1800000001)])
    Longitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1800000000, ub=1800000001)], ev=None, er=[])
    
    #-----< Latitude >-----#
    Latitude = INT(name='Latitude', mode=MODE_TYPE)
    Latitude._cont = ASN1Dict([('oneMicrodegreeNorth', 10), ('oneMicrodegreeSouth', -10), ('unavailable', 900000001)])
    Latitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-900000000, ub=900000001)], ev=None, er=[])
    
    #-----< Altitude >-----#
    Altitude = SEQ(name='Altitude', mode=MODE_TYPE)
    _Altitude_altitudeValue = INT(name='altitudeValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AltitudeValue')))
    _Altitude_altitudeConfidence = ENUM(name='altitudeConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AltitudeConfidence')))
    Altitude._cont = ASN1Dict([
        ('altitudeValue', _Altitude_altitudeValue),
        ('altitudeConfidence', _Altitude_altitudeConfidence),
        ])
    Altitude._ext = None
    
    #-----< AltitudeValue >-----#
    AltitudeValue = INT(name='AltitudeValue', mode=MODE_TYPE)
    AltitudeValue._cont = ASN1Dict([('referenceEllipsoidSurface', 0), ('oneCentimeter', 1), ('unavailable', 800001)])
    AltitudeValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-100000, ub=800001)], ev=None, er=[])
    
    #-----< AltitudeConfidence >-----#
    AltitudeConfidence = ENUM(name='AltitudeConfidence', mode=MODE_TYPE)
    AltitudeConfidence._cont = ASN1Dict([('alt-000-01', 0), ('alt-000-02', 1), ('alt-000-05', 2), ('alt-000-10', 3), ('alt-000-20', 4), ('alt-000-50', 5), ('alt-001-00', 6), ('alt-002-00', 7), ('alt-005-00', 8), ('alt-010-00', 9), ('alt-020-00', 10), ('alt-050-00', 11), ('alt-100-00', 12), ('alt-200-00', 13), ('outOfRange', 14), ('unavailable', 15)])
    AltitudeConfidence._ext = None
    
    #-----< DeltaLongitude >-----#
    DeltaLongitude = INT(name='DeltaLongitude', mode=MODE_TYPE)
    DeltaLongitude._cont = ASN1Dict([('oneMicrodegreeEast', 10), ('oneMicrodegreeWest', -10), ('unavailable', 131072)])
    DeltaLongitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131071, ub=131072)], ev=None, er=[])
    
    #-----< DeltaLatitude >-----#
    DeltaLatitude = INT(name='DeltaLatitude', mode=MODE_TYPE)
    DeltaLatitude._cont = ASN1Dict([('oneMicrodegreeNorth', 10), ('oneMicrodegreeSouth', -10), ('unavailable', 131072)])
    DeltaLatitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-131071, ub=131072)], ev=None, er=[])
    
    #-----< DeltaAltitude >-----#
    DeltaAltitude = INT(name='DeltaAltitude', mode=MODE_TYPE)
    DeltaAltitude._cont = ASN1Dict([('oneCentimeterUp', 1), ('oneCentimeterDown', -1), ('unavailable', 12800)])
    DeltaAltitude._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-12700, ub=12800)], ev=None, er=[])
    
    #-----< PosConfidenceEllipse >-----#
    PosConfidenceEllipse = SEQ(name='PosConfidenceEllipse', mode=MODE_TYPE)
    _PosConfidenceEllipse_semiMajorConfidence = INT(name='semiMajorConfidence', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SemiAxisLength')))
    _PosConfidenceEllipse_semiMinorConfidence = INT(name='semiMinorConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SemiAxisLength')))
    _PosConfidenceEllipse_semiMajorOrientation = INT(name='semiMajorOrientation', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HeadingValue')))
    PosConfidenceEllipse._cont = ASN1Dict([
        ('semiMajorConfidence', _PosConfidenceEllipse_semiMajorConfidence),
        ('semiMinorConfidence', _PosConfidenceEllipse_semiMinorConfidence),
        ('semiMajorOrientation', _PosConfidenceEllipse_semiMajorOrientation),
        ])
    PosConfidenceEllipse._ext = None
    
    #-----< PathPoint >-----#
    PathPoint = SEQ(name='PathPoint', mode=MODE_TYPE)
    _PathPoint_pathPosition = SEQ(name='pathPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaReferencePosition')))
    _PathPoint_pathDeltaTime = INT(name='pathDeltaTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PathDeltaTime')), opt=True)
    PathPoint._cont = ASN1Dict([
        ('pathPosition', _PathPoint_pathPosition),
        ('pathDeltaTime', _PathPoint_pathDeltaTime),
        ])
    PathPoint._ext = None
    
    #-----< PathDeltaTime >-----#
    PathDeltaTime = INT(name='PathDeltaTime', mode=MODE_TYPE)
    PathDeltaTime._cont = ASN1Dict([('tenMilliSecondsInPast', 1)])
    PathDeltaTime._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=65535)], ev=[], er=[])
    
    #-----< PtActivation >-----#
    PtActivation = SEQ(name='PtActivation', mode=MODE_TYPE)
    _PtActivation_ptActivationType = INT(name='ptActivationType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PtActivationType')))
    _PtActivation_ptActivationData = OCT_STR(name='ptActivationData', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PtActivationData')))
    PtActivation._cont = ASN1Dict([
        ('ptActivationType', _PtActivation_ptActivationType),
        ('ptActivationData', _PtActivation_ptActivationData),
        ])
    PtActivation._ext = None
    
    #-----< PtActivationType >-----#
    PtActivationType = INT(name='PtActivationType', mode=MODE_TYPE)
    PtActivationType._cont = ASN1Dict([('undefinedCodingType', 0), ('r09-16CodingType', 1), ('vdv-50149CodingType', 2)])
    PtActivationType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< PtActivationData >-----#
    PtActivationData = OCT_STR(name='PtActivationData', mode=MODE_TYPE)
    PtActivationData._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< AccelerationControl >-----#
    AccelerationControl = BIT_STR(name='AccelerationControl', mode=MODE_TYPE)
    AccelerationControl._cont = ASN1Dict([('brakePedalEngaged', 0), ('gasPedalEngaged', 1), ('emergencyBrakeEngaged', 2), ('collisionWarningEngaged', 3), ('accEngaged', 4), ('cruiseControlEngaged', 5), ('speedLimiterEngaged', 6)])
    AccelerationControl._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< SemiAxisLength >-----#
    SemiAxisLength = INT(name='SemiAxisLength', mode=MODE_TYPE)
    SemiAxisLength._cont = ASN1Dict([('oneCentimeter', 1), ('outOfRange', 4094), ('unavailable', 4095)])
    SemiAxisLength._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4095)], ev=None, er=[])
    
    #-----< CauseCode >-----#
    CauseCode = SEQ(name='CauseCode', mode=MODE_TYPE)
    _CauseCode_causeCode = INT(name='causeCode', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CauseCodeType')))
    _CauseCode_subCauseCode = INT(name='subCauseCode', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SubCauseCodeType')))
    CauseCode._cont = ASN1Dict([
        ('causeCode', _CauseCode_causeCode),
        ('subCauseCode', _CauseCode_subCauseCode),
        ])
    CauseCode._ext = []
    
    #-----< CauseCodeType >-----#
    CauseCodeType = INT(name='CauseCodeType', mode=MODE_TYPE)
    CauseCodeType._cont = ASN1Dict([('reserved', 0), ('trafficCondition', 1), ('accident', 2), ('roadworks', 3), ('impassability', 5), ('adverseWeatherCondition-Adhesion', 6), ('aquaplannning', 7), ('hazardousLocation-SurfaceCondition', 9), ('hazardousLocation-ObstacleOnTheRoad', 10), ('hazardousLocation-AnimalOnTheRoad', 11), ('humanPresenceOnTheRoad', 12), ('wrongWayDriving', 14), ('rescueAndRecoveryWorkInProgress', 15), ('adverseWeatherCondition-ExtremeWeatherCondition', 17), ('adverseWeatherCondition-Visibility', 18), ('adverseWeatherCondition-Precipitation', 19), ('slowVehicle', 26), ('dangerousEndOfQueue', 27), ('vehicleBreakdown', 91), ('postCrash', 92), ('humanProblem', 93), ('stationaryVehicle', 94), ('emergencyVehicleApproaching', 95), ('hazardousLocation-DangerousCurve', 96), ('collisionRisk', 97), ('signalViolation', 98), ('dangerousSituation', 99)])
    CauseCodeType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SubCauseCodeType >-----#
    SubCauseCodeType = INT(name='SubCauseCodeType', mode=MODE_TYPE)
    SubCauseCodeType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< TrafficConditionSubCauseCode >-----#
    TrafficConditionSubCauseCode = INT(name='TrafficConditionSubCauseCode', mode=MODE_TYPE)
    TrafficConditionSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('increasedVolumeOfTraffic', 1), ('trafficJamSlowlyIncreasing', 2), ('trafficJamIncreasing', 3), ('trafficJamStronglyIncreasing', 4), ('trafficStationary', 5), ('trafficJamSlightlyDecreasing', 6), ('trafficJamDecreasing', 7), ('trafficJamStronglyDecreasing', 8)])
    TrafficConditionSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AccidentSubCauseCode >-----#
    AccidentSubCauseCode = INT(name='AccidentSubCauseCode', mode=MODE_TYPE)
    AccidentSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('multiVehicleAccident', 1), ('heavyAccident', 2), ('accidentInvolvingLorry', 3), ('accidentInvolvingBus', 4), ('accidentInvolvingHazardousMaterials', 5), ('accidentOnOppositeLane', 6), ('unsecuredAccident', 7), ('assistanceRequested', 8)])
    AccidentSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< RoadworksSubCauseCode >-----#
    RoadworksSubCauseCode = INT(name='RoadworksSubCauseCode', mode=MODE_TYPE)
    RoadworksSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('majorRoadworks', 1), ('roadMarkingWork', 2), ('slowMovingRoadMaintenance', 3), ('shortTermStationaryRoadworks', 4), ('streetCleaning', 5), ('winterService', 6)])
    RoadworksSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HumanPresenceOnTheRoadSubCauseCode >-----#
    HumanPresenceOnTheRoadSubCauseCode = INT(name='HumanPresenceOnTheRoadSubCauseCode', mode=MODE_TYPE)
    HumanPresenceOnTheRoadSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('childrenOnRoadway', 1), ('cyclistOnRoadway', 2), ('motorcyclistOnRoadway', 3)])
    HumanPresenceOnTheRoadSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< WrongWayDrivingSubCauseCode >-----#
    WrongWayDrivingSubCauseCode = INT(name='WrongWayDrivingSubCauseCode', mode=MODE_TYPE)
    WrongWayDrivingSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('wrongLane', 1), ('wrongDirection', 2)])
    WrongWayDrivingSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode >-----#
    AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode = INT(name='AdverseWeatherCondition-ExtremeWeatherConditionSubCauseCode', mode=MODE_TYPE)
    AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('strongWinds', 1), ('damagingHail', 2), ('hurricane', 3), ('thunderstorm', 4), ('tornado', 5), ('blizzard', 6)])
    AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AdverseWeatherCondition-AdhesionSubCauseCode >-----#
    AdverseWeatherCondition_AdhesionSubCauseCode = INT(name='AdverseWeatherCondition-AdhesionSubCauseCode', mode=MODE_TYPE)
    AdverseWeatherCondition_AdhesionSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('heavyFrostOnRoad', 1), ('fuelOnRoad', 2), ('mudOnRoad', 3), ('snowOnRoad', 4), ('iceOnRoad', 5), ('blackIceOnRoad', 6), ('oilOnRoad', 7), ('looseChippings', 8), ('instantBlackIce', 9), ('roadsSalted', 10)])
    AdverseWeatherCondition_AdhesionSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AdverseWeatherCondition-VisibilitySubCauseCode >-----#
    AdverseWeatherCondition_VisibilitySubCauseCode = INT(name='AdverseWeatherCondition-VisibilitySubCauseCode', mode=MODE_TYPE)
    AdverseWeatherCondition_VisibilitySubCauseCode._cont = ASN1Dict([('unavailable', 0), ('fog', 1), ('smoke', 2), ('heavySnowfall', 3), ('heavyRain', 4), ('heavyHail', 5), ('lowSunGlare', 6), ('sandstorms', 7), ('swarmsOfInsects', 8)])
    AdverseWeatherCondition_VisibilitySubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< AdverseWeatherCondition-PrecipitationSubCauseCode >-----#
    AdverseWeatherCondition_PrecipitationSubCauseCode = INT(name='AdverseWeatherCondition-PrecipitationSubCauseCode', mode=MODE_TYPE)
    AdverseWeatherCondition_PrecipitationSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('heavyRain', 1), ('heavySnowfall', 2), ('softHail', 3)])
    AdverseWeatherCondition_PrecipitationSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SlowVehicleSubCauseCode >-----#
    SlowVehicleSubCauseCode = INT(name='SlowVehicleSubCauseCode', mode=MODE_TYPE)
    SlowVehicleSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('maintenanceVehicle', 1), ('vehiclesSlowingToLookAtAccident', 2), ('abnormalLoad', 3), ('abnormalWideLoad', 4), ('convoy', 5), ('snowplough', 6), ('deicing', 7), ('saltingVehicles', 8)])
    SlowVehicleSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< StationaryVehicleSubCauseCode >-----#
    StationaryVehicleSubCauseCode = INT(name='StationaryVehicleSubCauseCode', mode=MODE_TYPE)
    StationaryVehicleSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('humanProblem', 1), ('vehicleBreakdown', 2), ('postCrash', 3), ('publicTransportStop', 4), ('carryingDangerousGoods', 5)])
    StationaryVehicleSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HumanProblemSubCauseCode >-----#
    HumanProblemSubCauseCode = INT(name='HumanProblemSubCauseCode', mode=MODE_TYPE)
    HumanProblemSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('glycemiaProblem', 1), ('heartProblem', 2)])
    HumanProblemSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< EmergencyVehicleApproachingSubCauseCode >-----#
    EmergencyVehicleApproachingSubCauseCode = INT(name='EmergencyVehicleApproachingSubCauseCode', mode=MODE_TYPE)
    EmergencyVehicleApproachingSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('emergencyVehicleApproaching', 1), ('prioritizedVehicleApproaching', 2)])
    EmergencyVehicleApproachingSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HazardousLocation-DangerousCurveSubCauseCode >-----#
    HazardousLocation_DangerousCurveSubCauseCode = INT(name='HazardousLocation-DangerousCurveSubCauseCode', mode=MODE_TYPE)
    HazardousLocation_DangerousCurveSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('dangerousLeftTurnCurve', 1), ('dangerousRightTurnCurve', 2), ('multipleCurvesStartingWithUnknownTurningDirection', 3), ('multipleCurvesStartingWithLeftTurn', 4), ('multipleCurvesStartingWithRightTurn', 5)])
    HazardousLocation_DangerousCurveSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HazardousLocation-SurfaceConditionSubCauseCode >-----#
    HazardousLocation_SurfaceConditionSubCauseCode = INT(name='HazardousLocation-SurfaceConditionSubCauseCode', mode=MODE_TYPE)
    HazardousLocation_SurfaceConditionSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('rockfalls', 1), ('earthquakeDamage', 2), ('sewerCollapse', 3), ('subsidence', 4), ('snowDrifts', 5), ('stormDamage', 6), ('burstPipe', 7), ('volcanoEruption', 8), ('fallingIce', 9)])
    HazardousLocation_SurfaceConditionSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HazardousLocation-ObstacleOnTheRoadSubCauseCode >-----#
    HazardousLocation_ObstacleOnTheRoadSubCauseCode = INT(name='HazardousLocation-ObstacleOnTheRoadSubCauseCode', mode=MODE_TYPE)
    HazardousLocation_ObstacleOnTheRoadSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('shedLoad', 1), ('partsOfVehicles', 2), ('partsOfTyres', 3), ('bigObjects', 4), ('fallenTrees', 5), ('hubCaps', 6), ('waitingVehicles', 7)])
    HazardousLocation_ObstacleOnTheRoadSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< HazardousLocation-AnimalOnTheRoadSubCauseCode >-----#
    HazardousLocation_AnimalOnTheRoadSubCauseCode = INT(name='HazardousLocation-AnimalOnTheRoadSubCauseCode', mode=MODE_TYPE)
    HazardousLocation_AnimalOnTheRoadSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('wildAnimals', 1), ('herdOfAnimals', 2), ('smallAnimals', 3), ('largeAnimals', 4)])
    HazardousLocation_AnimalOnTheRoadSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< CollisionRiskSubCauseCode >-----#
    CollisionRiskSubCauseCode = INT(name='CollisionRiskSubCauseCode', mode=MODE_TYPE)
    CollisionRiskSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('longitudinalCollisionRisk', 1), ('crossingCollisionRisk', 2), ('lateralCollisionRisk', 3), ('vulnerableRoadUser', 4)])
    CollisionRiskSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< SignalViolationSubCauseCode >-----#
    SignalViolationSubCauseCode = INT(name='SignalViolationSubCauseCode', mode=MODE_TYPE)
    SignalViolationSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('stopSignViolation', 1), ('trafficLightViolation', 2), ('turningRegulationViolation', 3)])
    SignalViolationSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< RescueAndRecoveryWorkInProgressSubCauseCode >-----#
    RescueAndRecoveryWorkInProgressSubCauseCode = INT(name='RescueAndRecoveryWorkInProgressSubCauseCode', mode=MODE_TYPE)
    RescueAndRecoveryWorkInProgressSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('emergencyVehicles', 1), ('rescueHelicopterLanding', 2), ('policeActivityOngoing', 3), ('medicalEmergencyOngoing', 4), ('childAbductionInProgress', 5)])
    RescueAndRecoveryWorkInProgressSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DangerousEndOfQueueSubCauseCode >-----#
    DangerousEndOfQueueSubCauseCode = INT(name='DangerousEndOfQueueSubCauseCode', mode=MODE_TYPE)
    DangerousEndOfQueueSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('suddenEndOfQueue', 1), ('queueOverHill', 2), ('queueAroundBend', 3), ('queueInTunnel', 4)])
    DangerousEndOfQueueSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< DangerousSituationSubCauseCode >-----#
    DangerousSituationSubCauseCode = INT(name='DangerousSituationSubCauseCode', mode=MODE_TYPE)
    DangerousSituationSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('emergencyElectronicBrakeEngaged', 1), ('preCrashSystemEngaged', 2), ('espEngaged', 3), ('absEngaged', 4), ('aebEngaged', 5), ('brakeWarningEngaged', 6), ('collisionRiskWarningEngaged', 7)])
    DangerousSituationSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< VehicleBreakdownSubCauseCode >-----#
    VehicleBreakdownSubCauseCode = INT(name='VehicleBreakdownSubCauseCode', mode=MODE_TYPE)
    VehicleBreakdownSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('lackOfFuel', 1), ('lackOfBatteryPower', 2), ('engineProblem', 3), ('transmissionProblem', 4), ('engineCoolingProblem', 5), ('brakingSystemProblem', 6), ('steeringProblem', 7), ('tyrePuncture', 8), ('tyrePressureProblem', 9)])
    VehicleBreakdownSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< PostCrashSubCauseCode >-----#
    PostCrashSubCauseCode = INT(name='PostCrashSubCauseCode', mode=MODE_TYPE)
    PostCrashSubCauseCode._cont = ASN1Dict([('unavailable', 0), ('accidentWithoutECallTriggered', 1), ('accidentWithECallManuallyTriggered', 2), ('accidentWithECallAutomaticallyTriggered', 3), ('accidentWithECallTriggeredWithoutAccessToCellularNetwork', 4)])
    PostCrashSubCauseCode._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< Curvature >-----#
    Curvature = SEQ(name='Curvature', mode=MODE_TYPE)
    _Curvature_curvatureValue = INT(name='curvatureValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CurvatureValue')))
    _Curvature_curvatureConfidence = ENUM(name='curvatureConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CurvatureConfidence')))
    Curvature._cont = ASN1Dict([
        ('curvatureValue', _Curvature_curvatureValue),
        ('curvatureConfidence', _Curvature_curvatureConfidence),
        ])
    Curvature._ext = None
    
    #-----< CurvatureValue >-----#
    CurvatureValue = INT(name='CurvatureValue', mode=MODE_TYPE)
    CurvatureValue._cont = ASN1Dict([('straight', 0), ('unavailable', 1023)])
    CurvatureValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1023, ub=1023)], ev=None, er=[])
    
    #-----< CurvatureConfidence >-----#
    CurvatureConfidence = ENUM(name='CurvatureConfidence', mode=MODE_TYPE)
    CurvatureConfidence._cont = ASN1Dict([('onePerMeter-0-00002', 0), ('onePerMeter-0-0001', 1), ('onePerMeter-0-0005', 2), ('onePerMeter-0-002', 3), ('onePerMeter-0-01', 4), ('onePerMeter-0-1', 5), ('outOfRange', 6), ('unavailable', 7)])
    CurvatureConfidence._ext = None
    
    #-----< CurvatureCalculationMode >-----#
    CurvatureCalculationMode = ENUM(name='CurvatureCalculationMode', mode=MODE_TYPE)
    CurvatureCalculationMode._cont = ASN1Dict([('yawRateUsed', 0), ('yawRateNotUsed', 1), ('unavailable', 2)])
    CurvatureCalculationMode._ext = []
    
    #-----< Heading >-----#
    Heading = SEQ(name='Heading', mode=MODE_TYPE)
    _Heading_headingValue = INT(name='headingValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HeadingValue')))
    _Heading_headingConfidence = INT(name='headingConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HeadingConfidence')))
    Heading._cont = ASN1Dict([
        ('headingValue', _Heading_headingValue),
        ('headingConfidence', _Heading_headingConfidence),
        ])
    Heading._ext = None
    
    #-----< HeadingValue >-----#
    HeadingValue = INT(name='HeadingValue', mode=MODE_TYPE)
    HeadingValue._cont = ASN1Dict([('wgs84North', 0), ('wgs84East', 900), ('wgs84South', 1800), ('wgs84West', 2700), ('unavailable', 3601)])
    HeadingValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=3601)], ev=None, er=[])
    
    #-----< HeadingConfidence >-----#
    HeadingConfidence = INT(name='HeadingConfidence', mode=MODE_TYPE)
    HeadingConfidence._cont = ASN1Dict([('equalOrWithinZeroPointOneDegree', 1), ('equalOrWithinOneDegree', 10), ('outOfRange', 126), ('unavailable', 127)])
    HeadingConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< LanePosition >-----#
    LanePosition = INT(name='LanePosition', mode=MODE_TYPE)
    LanePosition._cont = ASN1Dict([('offTheRoad', -1), ('innerHardShoulder', 0), ('innermostDrivingLane', 1), ('secondLaneFromInside', 2), ('outerHardShoulder', 14)])
    LanePosition._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-1, ub=14)], ev=None, er=[])
    
    #-----< ClosedLanes >-----#
    ClosedLanes = SEQ(name='ClosedLanes', mode=MODE_TYPE)
    _ClosedLanes_innerhardShoulderStatus = ENUM(name='innerhardShoulderStatus', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HardShoulderStatus')), opt=True)
    _ClosedLanes_outerhardShoulderStatus = ENUM(name='outerhardShoulderStatus', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'HardShoulderStatus')), opt=True)
    _ClosedLanes_drivingLaneStatus = BIT_STR(name='drivingLaneStatus', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DrivingLaneStatus')), opt=True)
    ClosedLanes._cont = ASN1Dict([
        ('innerhardShoulderStatus', _ClosedLanes_innerhardShoulderStatus),
        ('outerhardShoulderStatus', _ClosedLanes_outerhardShoulderStatus),
        ('drivingLaneStatus', _ClosedLanes_drivingLaneStatus),
        ])
    ClosedLanes._ext = []
    
    #-----< HardShoulderStatus >-----#
    HardShoulderStatus = ENUM(name='HardShoulderStatus', mode=MODE_TYPE)
    HardShoulderStatus._cont = ASN1Dict([('availableForStopping', 0), ('closed', 1), ('availableForDriving', 2)])
    HardShoulderStatus._ext = None
    
    #-----< DrivingLaneStatus >-----#
    DrivingLaneStatus = BIT_STR(name='DrivingLaneStatus', mode=MODE_TYPE)
    DrivingLaneStatus._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=13)], ev=None, er=[])
    
    #-----< PerformanceClass >-----#
    PerformanceClass = INT(name='PerformanceClass', mode=MODE_TYPE)
    PerformanceClass._cont = ASN1Dict([('unavailable', 0), ('performanceClassA', 1), ('performanceClassB', 2)])
    PerformanceClass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< SpeedValue >-----#
    SpeedValue = INT(name='SpeedValue', mode=MODE_TYPE)
    SpeedValue._cont = ASN1Dict([('standstill', 0), ('oneCentimeterPerSec', 1), ('unavailable', 16383)])
    SpeedValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=16383)], ev=None, er=[])
    
    #-----< SpeedConfidence >-----#
    SpeedConfidence = INT(name='SpeedConfidence', mode=MODE_TYPE)
    SpeedConfidence._cont = ASN1Dict([('equalOrWithinOneCentimeterPerSec', 1), ('equalOrWithinOneMeterPerSec', 100), ('outOfRange', 126), ('unavailable', 127)])
    SpeedConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< VehicleMass >-----#
    VehicleMass = INT(name='VehicleMass', mode=MODE_TYPE)
    VehicleMass._cont = ASN1Dict([('hundredKg', 1), ('unavailable', 1024)])
    VehicleMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1024)], ev=None, er=[])
    
    #-----< Speed >-----#
    Speed = SEQ(name='Speed', mode=MODE_TYPE)
    _Speed_speedValue = INT(name='speedValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SpeedValue')))
    _Speed_speedConfidence = INT(name='speedConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SpeedConfidence')))
    Speed._cont = ASN1Dict([
        ('speedValue', _Speed_speedValue),
        ('speedConfidence', _Speed_speedConfidence),
        ])
    Speed._ext = None
    
    #-----< DriveDirection >-----#
    DriveDirection = ENUM(name='DriveDirection', mode=MODE_TYPE)
    DriveDirection._cont = ASN1Dict([('forward', 0), ('backward', 1), ('unavailable', 2)])
    DriveDirection._ext = None
    
    #-----< EmbarkationStatus >-----#
    EmbarkationStatus = BOOL(name='EmbarkationStatus', mode=MODE_TYPE)
    
    #-----< LongitudinalAcceleration >-----#
    LongitudinalAcceleration = SEQ(name='LongitudinalAcceleration', mode=MODE_TYPE)
    _LongitudinalAcceleration_longitudinalAccelerationValue = INT(name='longitudinalAccelerationValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LongitudinalAccelerationValue')))
    _LongitudinalAcceleration_longitudinalAccelerationConfidence = INT(name='longitudinalAccelerationConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AccelerationConfidence')))
    LongitudinalAcceleration._cont = ASN1Dict([
        ('longitudinalAccelerationValue', _LongitudinalAcceleration_longitudinalAccelerationValue),
        ('longitudinalAccelerationConfidence', _LongitudinalAcceleration_longitudinalAccelerationConfidence),
        ])
    LongitudinalAcceleration._ext = None
    
    #-----< LongitudinalAccelerationValue >-----#
    LongitudinalAccelerationValue = INT(name='LongitudinalAccelerationValue', mode=MODE_TYPE)
    LongitudinalAccelerationValue._cont = ASN1Dict([('pointOneMeterPerSecSquaredForward', 1), ('pointOneMeterPerSecSquaredBackward', -1), ('unavailable', 161)])
    LongitudinalAccelerationValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-160, ub=161)], ev=None, er=[])
    
    #-----< AccelerationConfidence >-----#
    AccelerationConfidence = INT(name='AccelerationConfidence', mode=MODE_TYPE)
    AccelerationConfidence._cont = ASN1Dict([('pointOneMeterPerSecSquared', 1), ('outOfRange', 101), ('unavailable', 102)])
    AccelerationConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=102)], ev=None, er=[])
    
    #-----< LateralAcceleration >-----#
    LateralAcceleration = SEQ(name='LateralAcceleration', mode=MODE_TYPE)
    _LateralAcceleration_lateralAccelerationValue = INT(name='lateralAccelerationValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'LateralAccelerationValue')))
    _LateralAcceleration_lateralAccelerationConfidence = INT(name='lateralAccelerationConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AccelerationConfidence')))
    LateralAcceleration._cont = ASN1Dict([
        ('lateralAccelerationValue', _LateralAcceleration_lateralAccelerationValue),
        ('lateralAccelerationConfidence', _LateralAcceleration_lateralAccelerationConfidence),
        ])
    LateralAcceleration._ext = None
    
    #-----< LateralAccelerationValue >-----#
    LateralAccelerationValue = INT(name='LateralAccelerationValue', mode=MODE_TYPE)
    LateralAccelerationValue._cont = ASN1Dict([('pointOneMeterPerSecSquaredToRight', -1), ('pointOneMeterPerSecSquaredToLeft', 1), ('unavailable', 161)])
    LateralAccelerationValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-160, ub=161)], ev=None, er=[])
    
    #-----< VerticalAcceleration >-----#
    VerticalAcceleration = SEQ(name='VerticalAcceleration', mode=MODE_TYPE)
    _VerticalAcceleration_verticalAccelerationValue = INT(name='verticalAccelerationValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VerticalAccelerationValue')))
    _VerticalAcceleration_verticalAccelerationConfidence = INT(name='verticalAccelerationConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'AccelerationConfidence')))
    VerticalAcceleration._cont = ASN1Dict([
        ('verticalAccelerationValue', _VerticalAcceleration_verticalAccelerationValue),
        ('verticalAccelerationConfidence', _VerticalAcceleration_verticalAccelerationConfidence),
        ])
    VerticalAcceleration._ext = None
    
    #-----< VerticalAccelerationValue >-----#
    VerticalAccelerationValue = INT(name='VerticalAccelerationValue', mode=MODE_TYPE)
    VerticalAccelerationValue._cont = ASN1Dict([('pointOneMeterPerSecSquaredUp', 1), ('pointOneMeterPerSecSquaredDown', -1), ('unavailable', 161)])
    VerticalAccelerationValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-160, ub=161)], ev=None, er=[])
    
    #-----< StationType >-----#
    StationType = INT(name='StationType', mode=MODE_TYPE)
    StationType._cont = ASN1Dict([('unknown', 0), ('pedestrian', 1), ('cyclist', 2), ('moped', 3), ('motorcycle', 4), ('passengerCar', 5), ('bus', 6), ('lightTruck', 7), ('heavyTruck', 8), ('trailer', 9), ('specialVehicles', 10), ('tram', 11), ('roadSideUnit', 15)])
    StationType._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=255)], ev=None, er=[])
    
    #-----< ExteriorLights >-----#
    ExteriorLights = BIT_STR(name='ExteriorLights', mode=MODE_TYPE)
    ExteriorLights._cont = ASN1Dict([('lowBeamHeadlightsOn', 0), ('highBeamHeadlightsOn', 1), ('leftTurnSignalOn', 2), ('rightTurnSignalOn', 3), ('daytimeRunningLightsOn', 4), ('reverseLightOn', 5), ('fogLightOn', 6), ('parkingLightsOn', 7)])
    ExteriorLights._const_sz = ASN1Set(rv=[8], rr=[], ev=None, er=[])
    
    #-----< DangerousGoodsBasic >-----#
    DangerousGoodsBasic = ENUM(name='DangerousGoodsBasic', mode=MODE_TYPE)
    DangerousGoodsBasic._cont = ASN1Dict([('explosives1', 0), ('explosives2', 1), ('explosives3', 2), ('explosives4', 3), ('explosives5', 4), ('explosives6', 5), ('flammableGases', 6), ('nonFlammableGases', 7), ('toxicGases', 8), ('flammableLiquids', 9), ('flammableSolids', 10), ('substancesLiableToSpontaneousCombustion', 11), ('substancesEmittingFlammableGasesUponContactWithWater', 12), ('oxidizingSubstances', 13), ('organicPeroxides', 14), ('toxicSubstances', 15), ('infectiousSubstances', 16), ('radioactiveMaterial', 17), ('corrosiveSubstances', 18), ('miscellaneousDangerousSubstances', 19)])
    DangerousGoodsBasic._ext = None
    
    #-----< DangerousGoodsExtended >-----#
    DangerousGoodsExtended = SEQ(name='DangerousGoodsExtended', mode=MODE_TYPE)
    _DangerousGoodsExtended_dangerousGoodsType = ENUM(name='dangerousGoodsType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DangerousGoodsBasic')))
    _DangerousGoodsExtended_unNumber = INT(name='unNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DangerousGoodsExtended_unNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=9999)], ev=None, er=[])
    _DangerousGoodsExtended_elevatedTemperature = BOOL(name='elevatedTemperature', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DangerousGoodsExtended_tunnelsRestricted = BOOL(name='tunnelsRestricted', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DangerousGoodsExtended_limitedQuantity = BOOL(name='limitedQuantity', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT))
    _DangerousGoodsExtended_emergencyActionCode = STR_IA5(name='emergencyActionCode', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DangerousGoodsExtended_emergencyActionCode._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    _DangerousGoodsExtended_phoneNumber = STR_NUM(name='phoneNumber', mode=MODE_TYPE, tag=(6, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PhoneNumber')), opt=True)
    _DangerousGoodsExtended_companyName = STR_UTF8(name='companyName', mode=MODE_TYPE, tag=(7, TAG_CONTEXT_SPEC, TAG_IMPLICIT), opt=True)
    _DangerousGoodsExtended_companyName._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=24)], ev=None, er=[])
    DangerousGoodsExtended._cont = ASN1Dict([
        ('dangerousGoodsType', _DangerousGoodsExtended_dangerousGoodsType),
        ('unNumber', _DangerousGoodsExtended_unNumber),
        ('elevatedTemperature', _DangerousGoodsExtended_elevatedTemperature),
        ('tunnelsRestricted', _DangerousGoodsExtended_tunnelsRestricted),
        ('limitedQuantity', _DangerousGoodsExtended_limitedQuantity),
        ('emergencyActionCode', _DangerousGoodsExtended_emergencyActionCode),
        ('phoneNumber', _DangerousGoodsExtended_phoneNumber),
        ('companyName', _DangerousGoodsExtended_companyName),
        ])
    DangerousGoodsExtended._ext = []
    
    #-----< SpecialTransportType >-----#
    SpecialTransportType = BIT_STR(name='SpecialTransportType', mode=MODE_TYPE)
    SpecialTransportType._cont = ASN1Dict([('heavyLoad', 0), ('excessWidth', 1), ('excessLength', 2), ('excessHeight', 3)])
    SpecialTransportType._const_sz = ASN1Set(rv=[4], rr=[], ev=None, er=[])
    
    #-----< LightBarSirenInUse >-----#
    LightBarSirenInUse = BIT_STR(name='LightBarSirenInUse', mode=MODE_TYPE)
    LightBarSirenInUse._cont = ASN1Dict([('lightBarActivated', 0), ('sirenActivated', 1)])
    LightBarSirenInUse._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< HeightLonCarr >-----#
    HeightLonCarr = INT(name='HeightLonCarr', mode=MODE_TYPE)
    HeightLonCarr._cont = ASN1Dict([('oneCentimeter', 1), ('unavailable', 100)])
    HeightLonCarr._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=100)], ev=None, er=[])
    
    #-----< PosLonCarr >-----#
    PosLonCarr = INT(name='PosLonCarr', mode=MODE_TYPE)
    PosLonCarr._cont = ASN1Dict([('oneCentimeter', 1), ('unavailable', 127)])
    PosLonCarr._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< PosPillar >-----#
    PosPillar = INT(name='PosPillar', mode=MODE_TYPE)
    PosPillar._cont = ASN1Dict([('tenCentimeters', 1), ('unavailable', 30)])
    PosPillar._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=30)], ev=None, er=[])
    
    #-----< PosCentMass >-----#
    PosCentMass = INT(name='PosCentMass', mode=MODE_TYPE)
    PosCentMass._cont = ASN1Dict([('tenCentimeters', 1), ('unavailable', 63)])
    PosCentMass._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=63)], ev=None, er=[])
    
    #-----< RequestResponseIndication >-----#
    RequestResponseIndication = ENUM(name='RequestResponseIndication', mode=MODE_TYPE)
    RequestResponseIndication._cont = ASN1Dict([('request', 0), ('response', 1)])
    RequestResponseIndication._ext = None
    
    #-----< SpeedLimit >-----#
    SpeedLimit = INT(name='SpeedLimit', mode=MODE_TYPE)
    SpeedLimit._cont = ASN1Dict([('oneKmPerHour', 1)])
    SpeedLimit._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< StationarySince >-----#
    StationarySince = ENUM(name='StationarySince', mode=MODE_TYPE)
    StationarySince._cont = ASN1Dict([('lessThan1Minute', 0), ('lessThan2Minutes', 1), ('lessThan15Minutes', 2), ('equalOrGreater15Minutes', 3)])
    StationarySince._ext = None
    
    #-----< Temperature >-----#
    Temperature = INT(name='Temperature', mode=MODE_TYPE)
    Temperature._cont = ASN1Dict([('equalOrSmallerThanMinus60Deg', -60), ('oneDegreeCelsius', 1), ('equalOrGreaterThan67Deg', 67)])
    Temperature._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-60, ub=67)], ev=None, er=[])
    
    #-----< TrafficRule >-----#
    TrafficRule = ENUM(name='TrafficRule', mode=MODE_TYPE)
    TrafficRule._cont = ASN1Dict([('noPassing', 0), ('noPassingForTrucks', 1), ('passToRight', 2), ('passToLeft', 3)])
    TrafficRule._ext = []
    
    #-----< WheelBaseVehicle >-----#
    WheelBaseVehicle = INT(name='WheelBaseVehicle', mode=MODE_TYPE)
    WheelBaseVehicle._cont = ASN1Dict([('tenCentimeters', 1), ('unavailable', 127)])
    WheelBaseVehicle._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< TurningRadius >-----#
    TurningRadius = INT(name='TurningRadius', mode=MODE_TYPE)
    TurningRadius._cont = ASN1Dict([('point4Meters', 1), ('unavailable', 255)])
    TurningRadius._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=None, er=[])
    
    #-----< PosFrontAx >-----#
    PosFrontAx = INT(name='PosFrontAx', mode=MODE_TYPE)
    PosFrontAx._cont = ASN1Dict([('tenCentimeters', 1), ('unavailable', 20)])
    PosFrontAx._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=20)], ev=None, er=[])
    
    #-----< PositionOfOccupants >-----#
    PositionOfOccupants = BIT_STR(name='PositionOfOccupants', mode=MODE_TYPE)
    PositionOfOccupants._cont = ASN1Dict([('row1LeftOccupied', 0), ('row1RightOccupied', 1), ('row1MidOccupied', 2), ('row1NotDetectable', 3), ('row1NotPresent', 4), ('row2LeftOccupied', 5), ('row2RightOccupied', 6), ('row2MidOccupied', 7), ('row2NotDetectable', 8), ('row2NotPresent', 9), ('row3LeftOccupied', 10), ('row3RightOccupied', 11), ('row3MidOccupied', 12), ('row3NotDetectable', 13), ('row3NotPresent', 14), ('row4LeftOccupied', 15), ('row4RightOccupied', 16), ('row4MidOccupied', 17), ('row4NotDetectable', 18), ('row4NotPresent', 19)])
    PositionOfOccupants._const_sz = ASN1Set(rv=[20], rr=[], ev=None, er=[])
    
    #-----< PositioningSolutionType >-----#
    PositioningSolutionType = ENUM(name='PositioningSolutionType', mode=MODE_TYPE)
    PositioningSolutionType._cont = ASN1Dict([('noPositioningSolution', 0), ('sGNSS', 1), ('dGNSS', 2), ('sGNSSplusDR', 3), ('dGNSSplusDR', 4), ('dR', 5)])
    PositioningSolutionType._ext = []
    
    #-----< VehicleIdentification >-----#
    VehicleIdentification = SEQ(name='VehicleIdentification', mode=MODE_TYPE)
    _VehicleIdentification_wMInumber = STR_IA5(name='wMInumber', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'WMInumber')), opt=True)
    _VehicleIdentification_vDS = STR_IA5(name='vDS', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VDS')), opt=True)
    VehicleIdentification._cont = ASN1Dict([
        ('wMInumber', _VehicleIdentification_wMInumber),
        ('vDS', _VehicleIdentification_vDS),
        ])
    VehicleIdentification._ext = []
    
    #-----< WMInumber >-----#
    WMInumber = STR_IA5(name='WMInumber', mode=MODE_TYPE)
    WMInumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=None, er=[])
    
    #-----< VDS >-----#
    VDS = STR_IA5(name='VDS', mode=MODE_TYPE)
    VDS._const_sz = ASN1Set(rv=[6], rr=[], ev=None, er=[])
    
    #-----< EnergyStorageType >-----#
    EnergyStorageType = BIT_STR(name='EnergyStorageType', mode=MODE_TYPE)
    EnergyStorageType._cont = ASN1Dict([('hydrogenStorage', 0), ('electricEnergyStorage', 1), ('liquidPropaneGas', 2), ('compressedNaturalGas', 3), ('diesel', 4), ('gasoline', 5), ('ammonia', 6)])
    EnergyStorageType._const_sz = ASN1Set(rv=[7], rr=[], ev=None, er=[])
    
    #-----< VehicleLength >-----#
    VehicleLength = SEQ(name='VehicleLength', mode=MODE_TYPE)
    _VehicleLength_vehicleLengthValue = INT(name='vehicleLengthValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VehicleLengthValue')))
    _VehicleLength_vehicleLengthConfidenceIndication = ENUM(name='vehicleLengthConfidenceIndication', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'VehicleLengthConfidenceIndication')))
    VehicleLength._cont = ASN1Dict([
        ('vehicleLengthValue', _VehicleLength_vehicleLengthValue),
        ('vehicleLengthConfidenceIndication', _VehicleLength_vehicleLengthConfidenceIndication),
        ])
    VehicleLength._ext = None
    
    #-----< VehicleLengthValue >-----#
    VehicleLengthValue = INT(name='VehicleLengthValue', mode=MODE_TYPE)
    VehicleLengthValue._cont = ASN1Dict([('tenCentimeters', 1), ('outOfRange', 1022), ('unavailable', 1023)])
    VehicleLengthValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=1023)], ev=None, er=[])
    
    #-----< VehicleLengthConfidenceIndication >-----#
    VehicleLengthConfidenceIndication = ENUM(name='VehicleLengthConfidenceIndication', mode=MODE_TYPE)
    VehicleLengthConfidenceIndication._cont = ASN1Dict([('noTrailerPresent', 0), ('trailerPresentWithKnownLength', 1), ('trailerPresentWithUnknownLength', 2), ('trailerPresenceIsUnknown', 3), ('unavailable', 4)])
    VehicleLengthConfidenceIndication._ext = None
    
    #-----< VehicleWidth >-----#
    VehicleWidth = INT(name='VehicleWidth', mode=MODE_TYPE)
    VehicleWidth._cont = ASN1Dict([('tenCentimeters', 1), ('outOfRange', 61), ('unavailable', 62)])
    VehicleWidth._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=62)], ev=None, er=[])
    
    #-----< PathHistory >-----#
    PathHistory = SEQ_OF(name='PathHistory', mode=MODE_TYPE)
    _PathHistory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'PathPoint')))
    PathHistory._cont = _PathHistory__item_
    PathHistory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=40)], ev=None, er=[])
    
    #-----< EmergencyPriority >-----#
    EmergencyPriority = BIT_STR(name='EmergencyPriority', mode=MODE_TYPE)
    EmergencyPriority._cont = ASN1Dict([('requestForRightOfWay', 0), ('requestForFreeCrossingAtATrafficLight', 1)])
    EmergencyPriority._const_sz = ASN1Set(rv=[2], rr=[], ev=None, er=[])
    
    #-----< InformationQuality >-----#
    InformationQuality = INT(name='InformationQuality', mode=MODE_TYPE)
    InformationQuality._cont = ASN1Dict([('unavailable', 0), ('lowest', 1), ('highest', 7)])
    InformationQuality._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=7)], ev=None, er=[])
    
    #-----< RoadType >-----#
    RoadType = ENUM(name='RoadType', mode=MODE_TYPE)
    RoadType._cont = ASN1Dict([('urban-NoStructuralSeparationToOppositeLanes', 0), ('urban-WithStructuralSeparationToOppositeLanes', 1), ('nonUrban-NoStructuralSeparationToOppositeLanes', 2), ('nonUrban-WithStructuralSeparationToOppositeLanes', 3)])
    RoadType._ext = None
    
    #-----< SteeringWheelAngle >-----#
    SteeringWheelAngle = SEQ(name='SteeringWheelAngle', mode=MODE_TYPE)
    _SteeringWheelAngle_steeringWheelAngleValue = INT(name='steeringWheelAngleValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SteeringWheelAngleValue')))
    _SteeringWheelAngle_steeringWheelAngleConfidence = INT(name='steeringWheelAngleConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SteeringWheelAngleConfidence')))
    SteeringWheelAngle._cont = ASN1Dict([
        ('steeringWheelAngleValue', _SteeringWheelAngle_steeringWheelAngleValue),
        ('steeringWheelAngleConfidence', _SteeringWheelAngle_steeringWheelAngleConfidence),
        ])
    SteeringWheelAngle._ext = None
    
    #-----< SteeringWheelAngleValue >-----#
    SteeringWheelAngleValue = INT(name='SteeringWheelAngleValue', mode=MODE_TYPE)
    SteeringWheelAngleValue._cont = ASN1Dict([('straight', 0), ('onePointFiveDegreesToRight', -1), ('onePointFiveDegreesToLeft', 1), ('unavailable', 512)])
    SteeringWheelAngleValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-511, ub=512)], ev=None, er=[])
    
    #-----< SteeringWheelAngleConfidence >-----#
    SteeringWheelAngleConfidence = INT(name='SteeringWheelAngleConfidence', mode=MODE_TYPE)
    SteeringWheelAngleConfidence._cont = ASN1Dict([('equalOrWithinOnePointFiveDegree', 1), ('outOfRange', 126), ('unavailable', 127)])
    SteeringWheelAngleConfidence._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=127)], ev=None, er=[])
    
    #-----< TimestampIts >-----#
    TimestampIts = INT(name='TimestampIts', mode=MODE_TYPE)
    TimestampIts._cont = ASN1Dict([('utcStartOf2004', 0), ('oneMillisecAfterUTCStartOf2004', 1)])
    TimestampIts._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=4398046511103)], ev=None, er=[])
    
    #-----< VehicleRole >-----#
    VehicleRole = ENUM(name='VehicleRole', mode=MODE_TYPE)
    VehicleRole._cont = ASN1Dict([('default', 0), ('publicTransport', 1), ('specialTransport', 2), ('dangerousGoods', 3), ('roadWork', 4), ('rescue', 5), ('emergency', 6), ('safetyCar', 7), ('agriculture', 8), ('commercial', 9), ('military', 10), ('roadOperator', 11), ('taxi', 12), ('reserved1', 13), ('reserved2', 14), ('reserved3', 15)])
    VehicleRole._ext = None
    
    #-----< YawRate >-----#
    YawRate = SEQ(name='YawRate', mode=MODE_TYPE)
    _YawRate_yawRateValue = INT(name='yawRateValue', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'YawRateValue')))
    _YawRate_yawRateConfidence = ENUM(name='yawRateConfidence', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'YawRateConfidence')))
    YawRate._cont = ASN1Dict([
        ('yawRateValue', _YawRate_yawRateValue),
        ('yawRateConfidence', _YawRate_yawRateConfidence),
        ])
    YawRate._ext = None
    
    #-----< YawRateValue >-----#
    YawRateValue = INT(name='YawRateValue', mode=MODE_TYPE)
    YawRateValue._cont = ASN1Dict([('straight', 0), ('degSec-000-01ToRight', -1), ('degSec-000-01ToLeft', 1), ('unavailable', 32767)])
    YawRateValue._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=-32766, ub=32767)], ev=None, er=[])
    
    #-----< YawRateConfidence >-----#
    YawRateConfidence = ENUM(name='YawRateConfidence', mode=MODE_TYPE)
    YawRateConfidence._cont = ASN1Dict([('degSec-000-01', 0), ('degSec-000-05', 1), ('degSec-000-10', 2), ('degSec-001-00', 3), ('degSec-005-00', 4), ('degSec-010-00', 5), ('degSec-100-00', 6), ('outOfRange', 7), ('unavailable', 8)])
    YawRateConfidence._ext = None
    
    #-----< ProtectedZoneType >-----#
    ProtectedZoneType = ENUM(name='ProtectedZoneType', mode=MODE_TYPE)
    ProtectedZoneType._cont = ASN1Dict([('permanentCenDsrcTolling', 0), ('temporaryCenDsrcTolling', 1)])
    ProtectedZoneType._ext = ['temporaryCenDsrcTolling']
    
    #-----< RelevanceDistance >-----#
    RelevanceDistance = ENUM(name='RelevanceDistance', mode=MODE_TYPE)
    RelevanceDistance._cont = ASN1Dict([('lessThan50m', 0), ('lessThan100m', 1), ('lessThan200m', 2), ('lessThan500m', 3), ('lessThan1000m', 4), ('lessThan5km', 5), ('lessThan10km', 6), ('over10km', 7)])
    RelevanceDistance._ext = None
    
    #-----< RelevanceTrafficDirection >-----#
    RelevanceTrafficDirection = ENUM(name='RelevanceTrafficDirection', mode=MODE_TYPE)
    RelevanceTrafficDirection._cont = ASN1Dict([('allTrafficDirections', 0), ('upstreamTraffic', 1), ('downstreamTraffic', 2), ('oppositeTraffic', 3)])
    RelevanceTrafficDirection._ext = None
    
    #-----< TransmissionInterval >-----#
    TransmissionInterval = INT(name='TransmissionInterval', mode=MODE_TYPE)
    TransmissionInterval._cont = ASN1Dict([('oneMilliSecond', 1), ('tenSeconds', 10000)])
    TransmissionInterval._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=10000)], ev=None, er=[])
    
    #-----< ValidityDuration >-----#
    ValidityDuration = INT(name='ValidityDuration', mode=MODE_TYPE)
    ValidityDuration._cont = ASN1Dict([('timeOfDetection', 0), ('oneSecondAfterDetection', 1)])
    ValidityDuration._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=86400)], ev=None, er=[])
    
    #-----< ActionID >-----#
    ActionID = SEQ(name='ActionID', mode=MODE_TYPE)
    _ActionID_originatingStationID = INT(name='originatingStationID', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'StationID')))
    _ActionID_sequenceNumber = INT(name='sequenceNumber', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'SequenceNumber')))
    ActionID._cont = ASN1Dict([
        ('originatingStationID', _ActionID_originatingStationID),
        ('sequenceNumber', _ActionID_sequenceNumber),
        ])
    ActionID._ext = None
    
    #-----< ItineraryPath >-----#
    ItineraryPath = SEQ_OF(name='ItineraryPath', mode=MODE_TYPE)
    _ItineraryPath__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'ReferencePosition')))
    ItineraryPath._cont = _ItineraryPath__item_
    ItineraryPath._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=40)], ev=None, er=[])
    
    #-----< ProtectedCommunicationZone >-----#
    ProtectedCommunicationZone = SEQ(name='ProtectedCommunicationZone', mode=MODE_TYPE)
    _ProtectedCommunicationZone_protectedZoneType = ENUM(name='protectedZoneType', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ProtectedZoneType')))
    _ProtectedCommunicationZone_expiryTime = INT(name='expiryTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'TimestampIts')), opt=True)
    _ProtectedCommunicationZone_protectedZoneLatitude = INT(name='protectedZoneLatitude', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Latitude')))
    _ProtectedCommunicationZone_protectedZoneLongitude = INT(name='protectedZoneLongitude', mode=MODE_TYPE, tag=(3, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Longitude')))
    _ProtectedCommunicationZone_protectedZoneRadius = INT(name='protectedZoneRadius', mode=MODE_TYPE, tag=(4, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ProtectedZoneRadius')), opt=True)
    _ProtectedCommunicationZone_protectedZoneID = INT(name='protectedZoneID', mode=MODE_TYPE, tag=(5, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'ProtectedZoneID')), opt=True)
    ProtectedCommunicationZone._cont = ASN1Dict([
        ('protectedZoneType', _ProtectedCommunicationZone_protectedZoneType),
        ('expiryTime', _ProtectedCommunicationZone_expiryTime),
        ('protectedZoneLatitude', _ProtectedCommunicationZone_protectedZoneLatitude),
        ('protectedZoneLongitude', _ProtectedCommunicationZone_protectedZoneLongitude),
        ('protectedZoneRadius', _ProtectedCommunicationZone_protectedZoneRadius),
        ('protectedZoneID', _ProtectedCommunicationZone_protectedZoneID),
        ])
    ProtectedCommunicationZone._ext = []
    
    #-----< Traces >-----#
    Traces = SEQ_OF(name='Traces', mode=MODE_TYPE)
    _Traces__item_ = SEQ_OF(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'PathHistory')))
    Traces._cont = _Traces__item_
    Traces._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=7)], ev=None, er=[])
    
    #-----< NumberOfOccupants >-----#
    NumberOfOccupants = INT(name='NumberOfOccupants', mode=MODE_TYPE)
    NumberOfOccupants._cont = ASN1Dict([('oneOccupant', 1), ('unavailable', 127)])
    NumberOfOccupants._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=127)], ev=None, er=[])
    
    #-----< SequenceNumber >-----#
    SequenceNumber = INT(name='SequenceNumber', mode=MODE_TYPE)
    SequenceNumber._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=65535)], ev=None, er=[])
    
    #-----< PositionOfPillars >-----#
    PositionOfPillars = SEQ_OF(name='PositionOfPillars', mode=MODE_TYPE)
    _PositionOfPillars__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'PosPillar')))
    PositionOfPillars._cont = _PositionOfPillars__item_
    PositionOfPillars._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=[], er=[])
    
    #-----< RestrictedTypes >-----#
    RestrictedTypes = SEQ_OF(name='RestrictedTypes', mode=MODE_TYPE)
    _RestrictedTypes__item_ = INT(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'StationType')))
    RestrictedTypes._cont = _RestrictedTypes__item_
    RestrictedTypes._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=3)], ev=[], er=[])
    
    #-----< EventHistory >-----#
    EventHistory = SEQ_OF(name='EventHistory', mode=MODE_TYPE)
    _EventHistory__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'EventPoint')))
    EventHistory._cont = _EventHistory__item_
    EventHistory._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=23)], ev=None, er=[])
    
    #-----< EventPoint >-----#
    EventPoint = SEQ(name='EventPoint', mode=MODE_TYPE)
    _EventPoint_eventPosition = SEQ(name='eventPosition', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'DeltaReferencePosition')))
    _EventPoint_eventDeltaTime = INT(name='eventDeltaTime', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'PathDeltaTime')), opt=True)
    _EventPoint_informationQuality = INT(name='informationQuality', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'InformationQuality')))
    EventPoint._cont = ASN1Dict([
        ('eventPosition', _EventPoint_eventPosition),
        ('eventDeltaTime', _EventPoint_eventDeltaTime),
        ('informationQuality', _EventPoint_informationQuality),
        ])
    EventPoint._ext = None
    
    #-----< ProtectedCommunicationZonesRSU >-----#
    ProtectedCommunicationZonesRSU = SEQ_OF(name='ProtectedCommunicationZonesRSU', mode=MODE_TYPE)
    _ProtectedCommunicationZonesRSU__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'ProtectedCommunicationZone')))
    ProtectedCommunicationZonesRSU._cont = _ProtectedCommunicationZonesRSU__item_
    ProtectedCommunicationZonesRSU._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    #-----< CenDsrcTollingZone >-----#
    CenDsrcTollingZone = SEQ(name='CenDsrcTollingZone', mode=MODE_TYPE)
    _CenDsrcTollingZone_protectedZoneLatitude = INT(name='protectedZoneLatitude', mode=MODE_TYPE, tag=(0, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Latitude')))
    _CenDsrcTollingZone_protectedZoneLongitude = INT(name='protectedZoneLongitude', mode=MODE_TYPE, tag=(1, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'Longitude')))
    _CenDsrcTollingZone_cenDsrcTollingZoneID = INT(name='cenDsrcTollingZoneID', mode=MODE_TYPE, tag=(2, TAG_CONTEXT_SPEC, TAG_IMPLICIT), typeref=ASN1RefType(('ITS-Container', 'CenDsrcTollingZoneID')), opt=True)
    CenDsrcTollingZone._cont = ASN1Dict([
        ('protectedZoneLatitude', _CenDsrcTollingZone_protectedZoneLatitude),
        ('protectedZoneLongitude', _CenDsrcTollingZone_protectedZoneLongitude),
        ('cenDsrcTollingZoneID', _CenDsrcTollingZone_cenDsrcTollingZoneID),
        ])
    CenDsrcTollingZone._ext = []
    
    #-----< ProtectedZoneRadius >-----#
    ProtectedZoneRadius = INT(name='ProtectedZoneRadius', mode=MODE_TYPE)
    ProtectedZoneRadius._cont = ASN1Dict([('oneMeter', 1)])
    ProtectedZoneRadius._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=255)], ev=[], er=[])
    
    #-----< ProtectedZoneID >-----#
    ProtectedZoneID = INT(name='ProtectedZoneID', mode=MODE_TYPE)
    ProtectedZoneID._const_val = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=0, ub=134217727)], ev=None, er=[])
    
    #-----< CenDsrcTollingZoneID >-----#
    CenDsrcTollingZoneID = INT(name='CenDsrcTollingZoneID', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'ProtectedZoneID')))
    
    #-----< DigitalMap >-----#
    DigitalMap = SEQ_OF(name='DigitalMap', mode=MODE_TYPE)
    _DigitalMap__item_ = SEQ(name='_item_', mode=MODE_TYPE, typeref=ASN1RefType(('ITS-Container', 'ReferencePosition')))
    DigitalMap._cont = _DigitalMap__item_
    DigitalMap._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=256)], ev=None, er=[])
    
    #-----< OpeningDaysHours >-----#
    OpeningDaysHours = STR_UTF8(name='OpeningDaysHours', mode=MODE_TYPE)
    
    #-----< PhoneNumber >-----#
    PhoneNumber = STR_NUM(name='PhoneNumber', mode=MODE_TYPE)
    PhoneNumber._const_sz = ASN1Set(rv=[], rr=[ASN1RangeInt(lb=1, ub=16)], ev=None, er=[])
    
    _all_ = [
        _ItsPduHeader_protocolVersion,
        _ItsPduHeader_messageID,
        _ItsPduHeader_stationID,
        ItsPduHeader,
        StationID,
        _ReferencePosition_latitude,
        _ReferencePosition_longitude,
        _ReferencePosition_positionConfidenceEllipse,
        _ReferencePosition_altitude,
        ReferencePosition,
        _DeltaReferencePosition_deltaLatitude,
        _DeltaReferencePosition_deltaLongitude,
        _DeltaReferencePosition_deltaAltitude,
        DeltaReferencePosition,
        Longitude,
        Latitude,
        _Altitude_altitudeValue,
        _Altitude_altitudeConfidence,
        Altitude,
        AltitudeValue,
        AltitudeConfidence,
        DeltaLongitude,
        DeltaLatitude,
        DeltaAltitude,
        _PosConfidenceEllipse_semiMajorConfidence,
        _PosConfidenceEllipse_semiMinorConfidence,
        _PosConfidenceEllipse_semiMajorOrientation,
        PosConfidenceEllipse,
        _PathPoint_pathPosition,
        _PathPoint_pathDeltaTime,
        PathPoint,
        PathDeltaTime,
        _PtActivation_ptActivationType,
        _PtActivation_ptActivationData,
        PtActivation,
        PtActivationType,
        PtActivationData,
        AccelerationControl,
        SemiAxisLength,
        _CauseCode_causeCode,
        _CauseCode_subCauseCode,
        CauseCode,
        CauseCodeType,
        SubCauseCodeType,
        TrafficConditionSubCauseCode,
        AccidentSubCauseCode,
        RoadworksSubCauseCode,
        HumanPresenceOnTheRoadSubCauseCode,
        WrongWayDrivingSubCauseCode,
        AdverseWeatherCondition_ExtremeWeatherConditionSubCauseCode,
        AdverseWeatherCondition_AdhesionSubCauseCode,
        AdverseWeatherCondition_VisibilitySubCauseCode,
        AdverseWeatherCondition_PrecipitationSubCauseCode,
        SlowVehicleSubCauseCode,
        StationaryVehicleSubCauseCode,
        HumanProblemSubCauseCode,
        EmergencyVehicleApproachingSubCauseCode,
        HazardousLocation_DangerousCurveSubCauseCode,
        HazardousLocation_SurfaceConditionSubCauseCode,
        HazardousLocation_ObstacleOnTheRoadSubCauseCode,
        HazardousLocation_AnimalOnTheRoadSubCauseCode,
        CollisionRiskSubCauseCode,
        SignalViolationSubCauseCode,
        RescueAndRecoveryWorkInProgressSubCauseCode,
        DangerousEndOfQueueSubCauseCode,
        DangerousSituationSubCauseCode,
        VehicleBreakdownSubCauseCode,
        PostCrashSubCauseCode,
        _Curvature_curvatureValue,
        _Curvature_curvatureConfidence,
        Curvature,
        CurvatureValue,
        CurvatureConfidence,
        CurvatureCalculationMode,
        _Heading_headingValue,
        _Heading_headingConfidence,
        Heading,
        HeadingValue,
        HeadingConfidence,
        LanePosition,
        _ClosedLanes_innerhardShoulderStatus,
        _ClosedLanes_outerhardShoulderStatus,
        _ClosedLanes_drivingLaneStatus,
        ClosedLanes,
        HardShoulderStatus,
        DrivingLaneStatus,
        PerformanceClass,
        SpeedValue,
        SpeedConfidence,
        VehicleMass,
        _Speed_speedValue,
        _Speed_speedConfidence,
        Speed,
        DriveDirection,
        EmbarkationStatus,
        _LongitudinalAcceleration_longitudinalAccelerationValue,
        _LongitudinalAcceleration_longitudinalAccelerationConfidence,
        LongitudinalAcceleration,
        LongitudinalAccelerationValue,
        AccelerationConfidence,
        _LateralAcceleration_lateralAccelerationValue,
        _LateralAcceleration_lateralAccelerationConfidence,
        LateralAcceleration,
        LateralAccelerationValue,
        _VerticalAcceleration_verticalAccelerationValue,
        _VerticalAcceleration_verticalAccelerationConfidence,
        VerticalAcceleration,
        VerticalAccelerationValue,
        StationType,
        ExteriorLights,
        DangerousGoodsBasic,
        _DangerousGoodsExtended_dangerousGoodsType,
        _DangerousGoodsExtended_unNumber,
        _DangerousGoodsExtended_elevatedTemperature,
        _DangerousGoodsExtended_tunnelsRestricted,
        _DangerousGoodsExtended_limitedQuantity,
        _DangerousGoodsExtended_emergencyActionCode,
        _DangerousGoodsExtended_phoneNumber,
        _DangerousGoodsExtended_companyName,
        DangerousGoodsExtended,
        SpecialTransportType,
        LightBarSirenInUse,
        HeightLonCarr,
        PosLonCarr,
        PosPillar,
        PosCentMass,
        RequestResponseIndication,
        SpeedLimit,
        StationarySince,
        Temperature,
        TrafficRule,
        WheelBaseVehicle,
        TurningRadius,
        PosFrontAx,
        PositionOfOccupants,
        PositioningSolutionType,
        _VehicleIdentification_wMInumber,
        _VehicleIdentification_vDS,
        VehicleIdentification,
        WMInumber,
        VDS,
        EnergyStorageType,
        _VehicleLength_vehicleLengthValue,
        _VehicleLength_vehicleLengthConfidenceIndication,
        VehicleLength,
        VehicleLengthValue,
        VehicleLengthConfidenceIndication,
        VehicleWidth,
        _PathHistory__item_,
        PathHistory,
        EmergencyPriority,
        InformationQuality,
        RoadType,
        _SteeringWheelAngle_steeringWheelAngleValue,
        _SteeringWheelAngle_steeringWheelAngleConfidence,
        SteeringWheelAngle,
        SteeringWheelAngleValue,
        SteeringWheelAngleConfidence,
        TimestampIts,
        VehicleRole,
        _YawRate_yawRateValue,
        _YawRate_yawRateConfidence,
        YawRate,
        YawRateValue,
        YawRateConfidence,
        ProtectedZoneType,
        RelevanceDistance,
        RelevanceTrafficDirection,
        TransmissionInterval,
        ValidityDuration,
        _ActionID_originatingStationID,
        _ActionID_sequenceNumber,
        ActionID,
        _ItineraryPath__item_,
        ItineraryPath,
        _ProtectedCommunicationZone_protectedZoneType,
        _ProtectedCommunicationZone_expiryTime,
        _ProtectedCommunicationZone_protectedZoneLatitude,
        _ProtectedCommunicationZone_protectedZoneLongitude,
        _ProtectedCommunicationZone_protectedZoneRadius,
        _ProtectedCommunicationZone_protectedZoneID,
        ProtectedCommunicationZone,
        _Traces__item_,
        Traces,
        NumberOfOccupants,
        SequenceNumber,
        _PositionOfPillars__item_,
        PositionOfPillars,
        _RestrictedTypes__item_,
        RestrictedTypes,
        _EventHistory__item_,
        EventHistory,
        _EventPoint_eventPosition,
        _EventPoint_eventDeltaTime,
        _EventPoint_informationQuality,
        EventPoint,
        _ProtectedCommunicationZonesRSU__item_,
        ProtectedCommunicationZonesRSU,
        _CenDsrcTollingZone_protectedZoneLatitude,
        _CenDsrcTollingZone_protectedZoneLongitude,
        _CenDsrcTollingZone_cenDsrcTollingZoneID,
        CenDsrcTollingZone,
        ProtectedZoneRadius,
        ProtectedZoneID,
        CenDsrcTollingZoneID,
        _DigitalMap__item_,
        DigitalMap,
        OpeningDaysHours,
        PhoneNumber,
    ]

init_modules(CAM_PDU_Descriptions, ITS_Container)
